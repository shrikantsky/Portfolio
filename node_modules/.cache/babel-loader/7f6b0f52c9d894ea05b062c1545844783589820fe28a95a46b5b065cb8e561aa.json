{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHRIKYAD\\\\Desktop\\\\portfolio shrikant\\\\portfolio\\\\src\\\\component\\\\Instagram.js\",\n  _s = $RefreshSig$();\nimport Feed from './Feed';\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n// import './instaFeeds.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Instagarm({\n  token,\n  ...props\n}) {\n  _s();\n  const [feeds, setFeedsData] = useState([]);\n  // Use useRef to store the latest value of the prop without firing the effect\n  const tokenProp = useRef(token);\n  tokenProp.current = token;\n  useEffect(() => {\n    // This is to avoid memory leaks\n    const abortController = new AbortController();\n    async function fetchInstagramPost() {\n      try {\n        const resp = await axios.get(`https://graph.instagram.com/me/media?fields=id,media_type,media_url,caption&limit=${props.limit}&access_token=${props.token}`);\n        setFeedsData(resp.data.data);\n      } catch (err) {\n        console.log('error', err);\n      }\n    }\n\n    // Manually call the fetch function\n    fetchInstagramPost();\n    return () => {\n      // Cancel pending fetch request on component unmount\n      abortController.abort();\n    };\n  }, [props.limit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: feeds.map(feed => /*#__PURE__*/_jsxDEV(Feed, {\n      feed: feed\n    }, feed.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Instagarm, \"7Lr/QVuyl5mvaUDQyaq7AGnY33Y=\");\n_c = Instagarm;\nexport default Instagarm;\nvar _c;\n$RefreshReg$(_c, \"Instagarm\");","map":{"version":3,"names":["Feed","React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Instagarm","token","props","_s","feeds","setFeedsData","tokenProp","current","abortController","AbortController","fetchInstagramPost","resp","get","limit","data","err","console","log","abort","className","children","map","feed","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SHRIKYAD/Desktop/portfolio shrikant/portfolio/src/component/Instagram.js"],"sourcesContent":["\r\nimport Feed from './Feed'\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n// import './instaFeeds.css';\r\n\r\nfunction  Instagarm({ token, ...props }) {\r\n    const [feeds, setFeedsData] = useState([]);\r\n    // Use useRef to store the latest value of the prop without firing the effect\r\n    const tokenProp = useRef(token);\r\n    tokenProp.current = token;\r\n\r\n    useEffect(() => {\r\n        // This is to avoid memory leaks\r\n        const abortController = new AbortController();\r\n\r\n        async function fetchInstagramPost() {\r\n            try {\r\n                const resp = await axios.get(`https://graph.instagram.com/me/media?fields=id,media_type,media_url,caption&limit=${props.limit}&access_token=${props.token}`);\r\n                setFeedsData(resp.data.data);\r\n            } catch (err) {\r\n                console.log('error', err);\r\n            }\r\n        }\r\n\r\n        // Manually call the fetch function\r\n        fetchInstagramPost();\r\n\r\n        return () => {\r\n            // Cancel pending fetch request on component unmount\r\n            abortController.abort();\r\n        };\r\n    }, [props.limit]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {feeds.map((feed) => (\r\n                <Feed key={feed.id} feed={feed} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Instagarm;"],"mappings":";;AACA,OAAOA,IAAI,MAAM,QAAQ;AAEzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAAUC,SAASA,CAAC;EAAEC,KAAK;EAAE,GAAGC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACA,MAAMY,SAAS,GAAGV,MAAM,CAACK,KAAK,CAAC;EAC/BK,SAAS,CAACC,OAAO,GAAGN,KAAK;EAEzBN,SAAS,CAAC,MAAM;IACZ;IACA,MAAMa,eAAe,GAAG,IAAIC,eAAe,CAAC,CAAC;IAE7C,eAAeC,kBAAkBA,CAAA,EAAG;MAChC,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,qFAAoFV,KAAK,CAACW,KAAM,iBAAgBX,KAAK,CAACD,KAAM,EAAC,CAAC;QAC5JI,YAAY,CAACM,IAAI,CAACG,IAAI,CAACA,IAAI,CAAC;MAChC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,GAAG,CAAC;MAC7B;IACJ;;IAEA;IACAL,kBAAkB,CAAC,CAAC;IAEpB,OAAO,MAAM;MACT;MACAF,eAAe,CAACU,KAAK,CAAC,CAAC;IAC3B,CAAC;EACL,CAAC,EAAE,CAAChB,KAAK,CAACW,KAAK,CAAC,CAAC;EAEjB,oBACId,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACrBhB,KAAK,CAACiB,GAAG,CAAEC,IAAI,iBACZvB,OAAA,CAACP,IAAI;MAAe8B,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACxB,EAAA,CAnCSH,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAqCnB,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}