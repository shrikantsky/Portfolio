[{"C:\\Users\\SHRIKYAD\\Desktop\\portfolio shrikant\\portfolio\\src\\index.js":"1","C:\\Users\\SHRIKYAD\\Desktop\\portfolio shrikant\\portfolio\\src\\reportWebVitals.js":"2","C:\\Users\\SHRIKYAD\\Desktop\\portfolio shrikant\\portfolio\\src\\App.js":"3","C:\\Users\\SHRIKYAD\\Desktop\\portfolio shrikant\\portfolio\\src\\component\\HomePage.js":"4","C:\\Users\\SHRIKYAD\\Desktop\\portfolio shrikant\\portfolio\\src\\component\\Toogle.js":"5","C:\\Users\\SHRIKYAD\\Desktop\\portfolio shrikant\\portfolio\\src\\component\\Work.js":"6","C:\\Users\\SHRIKYAD\\Desktop\\portfolio shrikant\\portfolio\\src\\component\\Project.js":"7"},{"size":535,"mtime":1692873704658,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1692873704934,"results":"10","hashOfConfig":"9"},{"size":535,"mtime":1742452315875,"results":"11","hashOfConfig":"9"},{"size":6265,"mtime":1704094446924,"results":"12","hashOfConfig":"9"},{"size":3541,"mtime":1707205714912,"results":"13","hashOfConfig":"9"},{"size":4764,"mtime":1707202268020,"results":"14","hashOfConfig":"9"},{"size":1005,"mtime":1702460272459,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dehpqj",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\SHRIKYAD\\Desktop\\portfolio shrikant\\portfolio\\src\\index.js",[],[],"C:\\Users\\SHRIKYAD\\Desktop\\portfolio shrikant\\portfolio\\src\\reportWebVitals.js",[],[],"C:\\Users\\SHRIKYAD\\Desktop\\portfolio shrikant\\portfolio\\src\\App.js",[],[],"C:\\Users\\SHRIKYAD\\Desktop\\portfolio shrikant\\portfolio\\src\\component\\HomePage.js",["39","40","41","42","43"],[],"import React, { useEffect, useState } from 'react';\r\nimport { Link, redirect, useNavigate } from 'react-router-dom';\r\nimport './style.css';\r\nimport Sidebar from './Toogle';\r\n\r\n\r\n\r\nconst HomePage = () => {\r\n\r\n\r\n    const [isSlide, SetisSlisde] = useState(false);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const TxtType = function (el, toRotate, period) {\r\n            this.toRotate = toRotate;\r\n            this.el = el;\r\n            this.loopNum = 0;\r\n            this.period = parseInt(period, 10) || 2000;\r\n            this.txt = '';\r\n            this.tick();\r\n            this.isDeleting = false;\r\n        };\r\n\r\n        TxtType.prototype.tick = function () {\r\n            const i = this.loopNum % this.toRotate.length;\r\n            const fullTxt = this.toRotate[i];\r\n\r\n            if (this.isDeleting) {\r\n                this.txt = fullTxt.substring(0, this.txt.length - 1);\r\n            } else {\r\n                this.txt = fullTxt.substring(0, this.txt.length + 1);\r\n            }\r\n\r\n            this.el.innerHTML = '<span class=\"wrap\">' + this.txt + '</span>';\r\n\r\n            const that = this;\r\n            let delta = 200 - Math.random() * 100;\r\n\r\n            if (this.isDeleting) {\r\n                delta /= 2;\r\n            }\r\n\r\n            if (!this.isDeleting && this.txt === fullTxt) {\r\n                delta = this.period;\r\n                this.isDeleting = true;\r\n            } else if (this.isDeleting && this.txt === '') {\r\n                this.isDeleting = false;\r\n                this.loopNum++;\r\n                delta = 500;\r\n            }\r\n\r\n            setTimeout(function () {\r\n                that.tick();\r\n            }, delta);\r\n        };\r\n\r\n        const elements = document.getElementsByClassName('typewrite');\r\n        for (let i = 0; i < elements.length; i++) {\r\n            const toRotate = elements[i].getAttribute('data-type');\r\n            const period = elements[i].getAttribute('data-period');\r\n            if (toRotate) {\r\n                new TxtType(elements[i], JSON.parse(toRotate), period);\r\n            }\r\n        }\r\n\r\n        const css = document.createElement('style');\r\n        css.type = 'text/css';\r\n        css.innerHTML = '.typewrite > .wrap { border-right: 0.08em solid #fff}';\r\n        document.body.appendChild(css);\r\n    }, []);\r\n\r\n\r\n\r\n    const nav = useNavigate();\r\n\r\n\r\n    const hamberug = () => {\r\n\r\n        nav('/nav');\r\n\r\n    }\r\n\r\n\r\n    const handleReadMoreClick = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    const handelSlideClick = () => {\r\n        SetisSlisde(!isSlide);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <section className='sec'>\r\n            <Sidebar />\r\n            <div className='back'>\r\n\r\n                <div className=\"move\">\r\n\r\n\r\n\r\n                    <img alt=\"Man\" className=\"profile-image\" />\r\n\r\n                    <div className='Details'>\r\n                        <h1 className=\"name\">Shrikant</h1>\r\n                        <h1 className=\"surname\">Yadav</h1>\r\n                        {/* src={img} */}\r\n\r\n                        <h2 className=\"line\">|</h2>\r\n\r\n                        <h1 className=\"type\">\r\n                            <a\r\n                                href=\"\"\r\n                                className=\"typewrite\"\r\n                                data-period=\"2000\"\r\n                                data-type='[ \"java full stack Dev\",\"product designer.\", \"visual designer.\", \"interaction designer\", \"film photographer\",\"java\" ]'\r\n                            >\r\n                                <span className=\"wrap\"></span>\r\n                            </a>\r\n                        </h1>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"about-me\">\r\n                        {/* <button className=\"readmore\" onClick={handleReadMoreClick}>Read more</button> */}\r\n                        {isOpen ? null : <button className=\"readmore\" onClick={handleReadMoreClick}>Read more</button>}\r\n                    </div>\r\n\r\n\r\n                    {/* jsx for readmore open and close 1 declared the const true and false  */}\r\n\r\n\r\n                    {\r\n                        isOpen && (\r\n                            <div className='box' >\r\n                                <div className=\"dev\" class=\"card-header\" >\r\n                                    Hey Im A Devloper Developing My Skills\r\n                                </div>\r\n                                <div className='row'>\r\n                                    {/* <p  style={{backgroundImage:`url(${frame})`}}></p> */}\r\n                                    <p class=\"aboutme col-sm\">I am an accomplished Full Stack Developer\r\n                                        with a year of experience in crafting dynamic web experiences using Java and React</p>\r\n                                    <p class=\"skillsets col-sm\"> spring Boot .React .jsTypescriptPhotoshop.,jxihsbdrounoe,dbskijenrjen.</p>\r\n\r\n                                </div>\r\n\r\n                                <div className='container-fluid'>\r\n                                    <button className='closereadmore' onClick={handleReadMoreClick}> X</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        )\r\n                    }\r\n\r\n\r\n                        {/* //slide page from right */}\r\n\r\n                    {\r\n                        isSlide && (\r\n                            <div className='page'>\r\n                                <p className=\"year\">2022</p>\r\n                                <h1 className=\"font_4hjqte5kp\">\r\n                                    Metaverse at Google\r\n                                </h1>\r\n\r\n\r\n                                <span className=\"Descrpition\">\r\n                                    I worked with a number of designers and researchers on the small Immersive Studio to explore potential entrypoints for Google inside the Metaverse. I built numerous prototypes that were presented to leadership in Q4 of 2022.\r\n\r\n                                </span>\r\n\r\n                            </div>\r\n                        )\r\n                    }\r\n                  \r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\SHRIKYAD\\Desktop\\portfolio shrikant\\portfolio\\src\\component\\Toogle.js",[],[],"C:\\Users\\SHRIKYAD\\Desktop\\portfolio shrikant\\portfolio\\src\\component\\Work.js",["44","45","46"],[],"\r\nimport logo from './Images/check.jpg';\r\nimport './work.css';\r\nimport img from './Images/mobile-screen.png'\r\n\r\nimport Sidebar from './Toogle';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction Work() {\r\n\r\n  const [currentScreen, SetCurrentScreen] = useState(1);\r\n\r\n  const handlePreviousScreen = () => {\r\n    SetCurrentScreen(currentScreen - 1)\r\n\r\n  }\r\n\r\n  const handleNextScreen = () => {\r\n    SetCurrentScreen(currentScreen + 1)\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  return (<div>\r\n    <section >\r\n      <Sidebar />\r\n\r\n          <div className='mobile-screen-content'>\r\n            <div className='mobile-screen'>\r\n              <img className='img-png' src={img} />\r\n             \r\n                <div id=\"carouselExampleCaptions\" class=\"carousel slide\">\r\n                 \r\n                  <div class=\"carousel-inner\">\r\n                    <div class=\"carousel-item active homeScreen-one\">\r\n                      {/* <img src={img} class=\"d-block w-100\" alt=\"...\" /> */}\r\n                      <div class=\"c-1 d-none d-md-block\">\r\n                        \r\n                       \r\n                      </div>\r\n                    </div>\r\n                    <div class=\"carousel-item homeScreen-two\" >\r\n                      {/* <img src={img} class=\"d-block w-100\" alt=\"...\" /> */}\r\n                      {/*   <div class=\"carousel-caption d-none d-md-block\"> carousel-caption if im going to add in class then caption come on image */}\r\n                      <div class=\"c-2 d-none d-md-block \">\r\n                        \r\n                      </div>\r\n                    </div>\r\n                    <div class=\"carousel-item  homeScreen-three\">\r\n                      {/* <img src={img} class=\"d-block w-100\" alt=\"...\" /> */}\r\n                      <div class=\"c-3 d-none d-md-block\">\r\n                        {/* <h5>optimize</h5>\r\n                        <p>welcomes you.</p> */}\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"carousel-item  homeScreen-four\">\r\n                      {/* <img src={img} class=\"d-block w-100\" alt=\"...\" /> */}\r\n                      <div class=\"c-3 d-none d-md-block\">\r\n                        {/* <h5>optimize</h5>\r\n                        <p>welcomes you.</p> */}\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"carousel-item  homeScreen-five\">\r\n                      {/* <img src={img} class=\"d-block w-100\" alt=\"...\" /> */}\r\n                      <div class=\"c-3 d-none d-md-block\">\r\n                        {/* <h5>optimize</h5>\r\n                        <p>welcomes you.</p> */}\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"carousel-item  homeScreen-six\">\r\n                      {/* <img src={img} class=\"d-block w-100\" alt=\"...\" /> */}\r\n                      <div class=\"c-3 d-none d-md-block\">\r\n                        <h1>Hello</h1>\r\n                     <h2 className=\"para-lastscreen\">\r\n                      \r\n                      Explore the Future: -\r\n                      Dive into an interactive preview of our\r\n                      UI/UX design! \r\n\r\n                    <blockquote/>\r\n\r\n                     Experience the seamless\r\n                    flow, vibrant visuals, and user-friendly\r\n                    interface\r\n\r\n\r\n                    Click <a href=\"https://www.figma.com/proto/Ex294RrCyMl62gR5l82JFe/photo?type=design&node-id=271-73&t=NkcfV20bVVgWVoRZ-1&scaling=scale-down&page-id=271%3A11&starting-point-node-id=271%3A73&show-proto-sidebar=1\">here</a>\r\n\r\n                     </h2>\r\n\r\n   \r\n                   \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button class=\"carousel-control-prev\" type=\"button\" data-target=\"#carouselExampleCaptions\" data-slide=\"prev\">\r\n                    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                    <span class=\"visually-hidden\">\r\n                      <button className='ui button'>\r\n                      <i class=\"bi bi-caret-left\"></i>\r\n                      </button>\r\n                    </span>\r\n                  </button>\r\n                  <button class=\"carousel-control-next\" type=\"button\" data-target=\"#carouselExampleCaptions\" data-slide=\"next\">\r\n                    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                    <span class=\"visually-hidden \"><i class=\"bi bi-caret-right\"></i></span>\r\n                  </button>\r\n                </div>\r\n              \r\n            </div>\r\n\r\n            <div>\r\n              <img className=\"the-story\" src={logo} alt=\"React Logo\" />\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n\r\n    </section>\r\n\r\n\r\n\r\n  </div>)\r\n}\r\n\r\nexport default Work;\r\n\r\n\r\n","C:\\Users\\SHRIKYAD\\Desktop\\portfolio shrikant\\portfolio\\src\\component\\Project.js",[],[],{"ruleId":"47","severity":1,"message":"48","line":2,"column":10,"nodeType":"49","messageId":"50","endLine":2,"endColumn":14},{"ruleId":"47","severity":1,"message":"51","line":2,"column":16,"nodeType":"49","messageId":"50","endLine":2,"endColumn":24},{"ruleId":"47","severity":1,"message":"52","line":80,"column":11,"nodeType":"49","messageId":"50","endLine":80,"endColumn":19},{"ruleId":"47","severity":1,"message":"53","line":91,"column":11,"nodeType":"49","messageId":"50","endLine":91,"endColumn":27},{"ruleId":"54","severity":1,"message":"55","line":118,"column":29,"nodeType":"56","endLine":123,"endColumn":30},{"ruleId":"47","severity":1,"message":"57","line":14,"column":9,"nodeType":"49","messageId":"50","endLine":14,"endColumn":29},{"ruleId":"47","severity":1,"message":"58","line":19,"column":9,"nodeType":"49","messageId":"50","endLine":19,"endColumn":25},{"ruleId":"59","severity":1,"message":"60","line":33,"column":15,"nodeType":"56","endLine":33,"endColumn":52},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'redirect' is defined but never used.","'hamberug' is assigned a value but never used.","'handelSlideClick' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'handlePreviousScreen' is assigned a value but never used.","'handleNextScreen' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]